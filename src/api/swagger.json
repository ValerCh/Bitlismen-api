{
  "openapi": "3.0.0",
  "servers": [],
  "info": {
    "title": "",
    "description": "",
    "version": ""
  },
  "tags": [
    {
      "name": "Info"
    },
    {
      "name": "Login"
    },
    {
      "name": "User"
    },
    {
      "name": "Component"
    },
    {
      "name": "Service"
    },
    {
      "name": "Assembly"
    },
    {
      "name": "Module"
    },
    {
      "name": "Trainer"
    },
    {
      "name": "Opportunity"
    },
    {
      "name": "Stock"
    },
    {
      "name": "Transaction"
    },
    {
      "name": "Vendor"
    },
    {
      "name": "Shop"
    },
    {
      "name": "Customer"
    },
    {
      "name": "Reseller"
    },
    {
      "name": "Tag"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "Show API information",
        "description": "This is a public route",
        "operationId": "showApiInfo",
        "responses": {
          "200": {
            "description": "ok"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "User login",
        "description": "",
        "operationId": "Login",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Login"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Login"
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List all users",
        "description": "Returns all users",
        "operationId": "FindAllUsers",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create new user",
        "description": "",
        "operationId": "CreateUser",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewUser"
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user",
        "description": "Returns the given user",
        "operationId": "FindUser",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user",
        "description": "Updates the given user",
        "operationId": "UpdateUser",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewUser"
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user",
        "description": "Removes the given user",
        "operationId": "DeleteUser",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/components": {
      "get": {
        "tags": [
          "Component"
        ],
        "summary": "List all components",
        "description": "Returns all components",
        "operationId": "FindAllComponents",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Component"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Component"
        ],
        "summary": "Create new component",
        "description": "",
        "operationId": "CreateComponent",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Component"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewComponent"
        }
      }
    },
    "/components/{id}": {
      "get": {
        "tags": [
          "Component"
        ],
        "summary": "Get component",
        "description": "Returns the given component",
        "operationId": "FindComponent",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of component to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Component"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Component"
        ],
        "summary": "Update component",
        "description": "Updates the given component",
        "operationId": "UpdateComponent",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of component to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Component"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewComponent"
        }
      },
      "delete": {
        "tags": [
          "Component"
        ],
        "summary": "Delete component",
        "description": "Removes the given component",
        "operationId": "DeleteComponent",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of component to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "List all services",
        "description": "Returns all services",
        "operationId": "FindAllServices",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Service"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create new service",
        "description": "",
        "operationId": "CreateService",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Service"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewService"
        }
      }
    },
    "/services/{id}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get service",
        "description": "Returns the given service",
        "operationId": "FindService",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of service to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Service"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Update service",
        "description": "Updates the given service",
        "operationId": "UpdateService",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of service to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Service"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewService"
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Delete service",
        "description": "Removes the given service",
        "operationId": "DeleteService",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of service to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/assemblies": {
      "get": {
        "tags": [
          "Assembly"
        ],
        "summary": "List all assemblies",
        "description": "Returns all assemblies",
        "operationId": "FindAllAssemblies",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Assembly"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Assembly"
        ],
        "summary": "Create new assembly",
        "description": "",
        "operationId": "CreateAssembly",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Assembly"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewAssembly"
        }
      }
    },
    "/assemblies/{id}": {
      "get": {
        "tags": [
          "Assembly"
        ],
        "summary": "Get assembly",
        "description": "Returns the given assembly",
        "operationId": "FindAssembly",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of assembly to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Assembly"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Assembly"
        ],
        "summary": "Update assembly",
        "description": "Updates the given assembly",
        "operationId": "UpdateAssembly",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of assembly to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Assembly"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewAssembly"
        }
      },
      "delete": {
        "tags": [
          "Assembly"
        ],
        "summary": "Delete assembly",
        "description": "Removes the given assembly",
        "operationId": "DeleteAssembly",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of assembly to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/modules": {
      "get": {
        "tags": [
          "Module"
        ],
        "summary": "List all modules",
        "description": "Returns all modules",
        "operationId": "FindAllModules",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Module"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Module"
        ],
        "summary": "Create new module",
        "description": "",
        "operationId": "CreateModule",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Module"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewModule"
        }
      }
    },
    "/modules/{id}": {
      "get": {
        "tags": [
          "Module"
        ],
        "summary": "Get module",
        "description": "Returns the given module",
        "operationId": "FindModule",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of module to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Module"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Module"
        ],
        "summary": "Update module",
        "description": "Updates the given module",
        "operationId": "UpdateModule",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of module to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Module"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewModule"
        }
      },
      "delete": {
        "tags": [
          "Module"
        ],
        "summary": "Delete module",
        "description": "Removes the given module",
        "operationId": "DeleteModule",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of module to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trainers": {
      "get": {
        "tags": [
          "Trainer"
        ],
        "summary": "List all trainers",
        "description": "Returns all trainers",
        "operationId": "FindAllTrainers",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Trainer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Trainer"
        ],
        "summary": "Create new trainer",
        "description": "",
        "operationId": "CreateTrainer",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Trainer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewTrainer"
        }
      }
    },
    "/trainers/{id}": {
      "get": {
        "tags": [
          "Trainer"
        ],
        "summary": "Get trainer",
        "description": "Returns the given trainer",
        "operationId": "FindTrainer",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of trainer to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Trainer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Trainer"
        ],
        "summary": "Update trainer",
        "description": "Updates the given trainer",
        "operationId": "UpdateTrainer",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of trainer to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Trainer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewTrainer"
        }
      },
      "delete": {
        "tags": [
          "Trainer"
        ],
        "summary": "Delete trainer",
        "description": "Removes the given trainer",
        "operationId": "DeleteTrainer",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of trainer to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/opportunities": {
      "get": {
        "tags": [
          "Opportunity"
        ],
        "summary": "List all opportunities",
        "description": "Returns all opportunities",
        "operationId": "FindAllOpportunities",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Opportunity"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Create new opportunity",
        "description": "",
        "operationId": "CreateOpportunity",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Opportunity"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewOpportunity"
        }
      }
    },
    "/opportunities/{id}": {
      "get": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Get opportunity",
        "description": "Returns the given opportunity",
        "operationId": "FindOpportunity",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of opportunity to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Opportunity"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Update opportunity",
        "description": "Updates the given opportunity",
        "operationId": "UpdateOpportunity",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of opportunity to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Opportunity"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewOpportunity"
        }
      },
      "delete": {
        "tags": [
          "Opportunity"
        ],
        "summary": "Delete opportunity",
        "description": "Removes the given opportunity",
        "operationId": "DeleteOpportunity",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of opportunity to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stocks": {
      "get": {
        "tags": [
          "Stock"
        ],
        "summary": "List all stocks",
        "description": "Returns all stocks",
        "operationId": "FindAllStocks",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Stock"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Stock"
        ],
        "summary": "Create new stock",
        "description": "",
        "operationId": "CreateStock",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Stock"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewStock"
        }
      }
    },
    "/stocks/{id}": {
      "get": {
        "tags": [
          "Stock"
        ],
        "summary": "Get stock",
        "description": "Returns the given stock",
        "operationId": "FindStock",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of stock to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Stock"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Stock"
        ],
        "summary": "Update stock",
        "description": "Updates the given stock",
        "operationId": "UpdateStock",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of stock to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Stock"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewStock"
        }
      },
      "delete": {
        "tags": [
          "Stock"
        ],
        "summary": "Delete stock",
        "description": "Removes the given stock",
        "operationId": "DeleteStock",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of stock to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "List all transactions",
        "description": "Returns all transactions",
        "operationId": "FindAllTransactions",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transaction"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transaction"
        ],
        "summary": "Create new transaction",
        "description": "",
        "operationId": "CreateTransaction",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewTransaction"
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "summary": "Get transaction",
        "description": "Returns the given transaction",
        "operationId": "FindTransaction",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transaction to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Transaction"
        ],
        "summary": "Update transaction",
        "description": "Updates the given transaction",
        "operationId": "UpdateTransaction",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transaction to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewTransaction"
        }
      },
      "delete": {
        "tags": [
          "Transaction"
        ],
        "summary": "Delete transaction",
        "description": "Removes the given transaction",
        "operationId": "DeleteTransaction",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transaction to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vendors": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "List all vendors",
        "description": "Returns all vendors",
        "operationId": "FindAllVendors",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vendor"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Create new vendor",
        "description": "",
        "operationId": "CreateVendor",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Vendor"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewVendor"
        }
      }
    },
    "/vendors/{id}": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Get vendor",
        "description": "Returns the given vendor",
        "operationId": "FindVendor",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of vendor to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Vendor"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vendor"
        ],
        "summary": "Update vendor",
        "description": "Updates the given vendor",
        "operationId": "UpdateVendor",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of vendor to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Vendor"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewVendor"
        }
      },
      "delete": {
        "tags": [
          "Vendor"
        ],
        "summary": "Delete vendor",
        "description": "Removes the given vendor",
        "operationId": "DeleteVendor",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of vendor to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shops": {
      "get": {
        "tags": [
          "Shop"
        ],
        "summary": "List all shops",
        "description": "Returns all shops",
        "operationId": "FindAllShops",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Shop"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Shop"
        ],
        "summary": "Create new shop",
        "description": "",
        "operationId": "CreateShop",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Shop"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewShop"
        }
      }
    },
    "/shops/{id}": {
      "get": {
        "tags": [
          "Shop"
        ],
        "summary": "Get shop",
        "description": "Returns the given shop",
        "operationId": "FindShop",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of shop to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Shop"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Shop"
        ],
        "summary": "Update shop",
        "description": "Updates the given shop",
        "operationId": "UpdateShop",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of shop to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Shop"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewShop"
        }
      },
      "delete": {
        "tags": [
          "Shop"
        ],
        "summary": "Delete shop",
        "description": "Removes the given shop",
        "operationId": "DeleteShop",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of shop to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "List all customers",
        "description": "Returns all customers",
        "operationId": "FindAllCustomers",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create new customer",
        "description": "",
        "operationId": "CreateCustomer",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewCustomer"
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get customer",
        "description": "Returns the given customer",
        "operationId": "FindCustomer",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of customer to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update customer",
        "description": "Updates the given customer",
        "operationId": "UpdateCustomer",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of customer to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Customer"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewCustomer"
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete customer",
        "description": "Removes the given customer",
        "operationId": "DeleteCustomer",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of customer to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/resellers": {
      "get": {
        "tags": [
          "Reseller"
        ],
        "summary": "List all resellers",
        "description": "Returns all resellers",
        "operationId": "FindAllResellers",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Reseller"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reseller"
        ],
        "summary": "Create new reseller",
        "description": "",
        "operationId": "CreateReseller",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Reseller"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewReseller"
        }
      }
    },
    "/resellers/{id}": {
      "get": {
        "tags": [
          "Reseller"
        ],
        "summary": "Get reseller",
        "description": "Returns the given reseller",
        "operationId": "FindReseller",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of reseller to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Reseller"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Reseller"
        ],
        "summary": "Update reseller",
        "description": "Updates the given reseller",
        "operationId": "UpdateReseller",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of reseller to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Reseller"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewReseller"
        }
      },
      "delete": {
        "tags": [
          "Reseller"
        ],
        "summary": "Delete reseller",
        "description": "Removes the given reseller",
        "operationId": "DeleteReseller",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of reseller to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "List all tags",
        "description": "Returns all tags",
        "operationId": "FindAllTags",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tag"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Create new tag",
        "description": "",
        "operationId": "CreateTag",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Tag"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewTag"
        }
      }
    },
    "/tags/{id}": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Get tag",
        "description": "Returns the given tag",
        "operationId": "FindTag",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of tag to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Tag"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tag"
        ],
        "summary": "Update tag",
        "description": "Updates the given tag",
        "operationId": "UpdateTag",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of tag to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Tag"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/NewTag"
        }
      },
      "delete": {
        "tags": [
          "Tag"
        ],
        "summary": "Delete tag",
        "description": "Removes the given tag",
        "operationId": "DeleteTag",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of tag to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "requestBodies": {
      "NewUser": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewUser"
            }
          }
        },
        "description": "User object that needs to be added to the database",
        "required": true
      },
      "NewComponent": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "$ref": "#/components/schemas/NewComponent"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewComponent"
            }
          }
        },
        "description": "Component object that needs to be added to the database",
        "required": true
      },
      "NewService": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewService"
            }
          }
        },
        "description": "Service object that needs to be added to the database",
        "required": true
      },
      "NewAssembly": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "$ref": "#/components/schemas/NewAssembly"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewAssembly"
            }
          }
        },
        "description": "Assembly object that needs to be added to the database",
        "required": true
      },
      "NewModule": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "$ref": "#/components/schemas/NewModule"
            }
          },
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewModule"
            }
          }
        },
        "description": "Module object that needs to be added to the database",
        "required": true
      },
      "NewTrainer": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewTrainer"
            }
          }
        },
        "description": "Trainer object that needs to be added to the database",
        "required": true
      },
      "NewOpportunity": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewOpportunity"
            }
          }
        },
        "description": "Opportunity object that needs to be added to the database",
        "required": true
      },
      "NewStock": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewStock"
            }
          }
        },
        "description": "Stock object that needs to be added to the database",
        "required": true
      },
      "NewTransaction": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewTransaction"
            }
          }
        },
        "description": "Transaction object that needs to be added to the database",
        "required": true
      },
      "NewVendor": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewVendor"
            }
          }
        },
        "description": "Vendor object that needs to be added to the database",
        "required": true
      },
      "NewShop": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewShop"
            }
          }
        },
        "description": "Shop object that needs to be added to the database",
        "required": true
      },
      "NewCustomer": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewCustomer"
            }
          }
        },
        "description": "Customer object that needs to be added to the database",
        "required": true
      },
      "NewReseller": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewReseller"
            }
          }
        },
        "description": "Reseller object that needs to be added to the database",
        "required": true
      },
      "NewTag": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NewTag"
            }
          }
        },
        "description": "Tag object that needs to be added to the database",
        "required": true
      },
      "Login": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Login"
            }
          }
        },
        "description": "Login and use jwt_token for authorization.",
        "required": true
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "NewUser": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role_id": {
            "type": "string"
          }
        }
      },
      "NewComponent": {
        "type": "object",
        "properties": {
          "CName": {
            "type": "string"
          },
          "CVendorPartNumber": {
            "type": "number"
          },
          "CPrimaryShopPartNumber": {
            "type": "string"
          },
          "CSecondaryShopPartNumber": {
            "type": "string"
          },
          "CTertiaryShopPartNumber": {
            "type": "string"
          },
          "CDescription": {
            "type": "string"
          },
          "file": {
            "type": "string",
            "format": "binary"
          },
          "Vendor_ID": {
            "type": "string",
            "format": "uuid"
          },
          "PrimaryShop_ID": {
            "type": "string",
            "format": "uuid"
          },
          "SecondaryShop_ID": {
            "type": "string",
            "format": "uuid"
          },
          "TertiaryShop_ID": {
            "type": "string",
            "format": "uuid"
          },
          "CUnit": {
            "type": "string"
          },
          "CCostUSD": {
            "type": "string"
          },
          "CCostRUB": {
            "type": "string"
          },
          "CCostAMD": {
            "type": "string"
          },
          "CEOL": {
            "type": "boolean"
          },
          "CTag": {
            "type": "string"
          }
        }
      },
      "NewService": {
        "type": "object",
        "properties": {
          "SName": {
            "type": "string"
          },
          "SShortName": {
            "type": "string"
          },
          "SDescription": {
            "type": "string"
          },
          "Shop_ID": {
            "type": "string",
            "format": "uuid"
          },
          "SUnit": {
            "type": "string"
          },
          "SCostUSD": {
            "type": "string"
          },
          "SCostRUB": {
            "type": "string"
          },
          "SCostAMD": {
            "type": "string"
          },
          "SEOL": {
            "type": "boolean"
          },
          "STag": {
            "type": "string"
          }
        }
      },
      "NewAssembly": {
        "type": "object",
        "properties": {
          "AName": {
            "type": "string"
          },
          "AShortName": {
            "type": "string"
          },
          "AType": {
            "type": "string"
          },
          "ATypeDescription": {
            "type": "string"
          },
          "APLEPartNumber": {
            "type": "string"
          },
          "ARevision": {
            "type": "string"
          },
          "ADescription": {
            "type": "string"
          },
          "file": {
            "type": "string",
            "format": "binary"
          },
          "ANetSizeHeight": {
            "type": "integer"
          },
          "ANetSizeWidth": {
            "type": "integer"
          },
          "ANetSizeLength": {
            "type": "integer"
          },
          "ANetWeight": {
            "type": "integer"
          },
          "AGrossWeight": {
            "type": "integer"
          },
          "AMarginPercent": {
            "type": "integer"
          },
          "AEOL": {
            "type": "boolean"
          },
          "ATag": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      },
      "NewModule": {
        "type": "object",
        "properties": {
          "MName": {
            "type": "string"
          },
          "MShortName": {
            "type": "string"
          },
          "MType": {
            "type": "string"
          },
          "MTypeDescription": {
            "type": "string"
          },
          "MPLEPartNumber": {
            "type": "string"
          },
          "MRevision": {
            "type": "string"
          },
          "MDescription": {
            "type": "string"
          },
          "file": {
            "type": "string",
            "format": "binary"
          },
          "MNetSizeHeight": {
            "type": "integer"
          },
          "MNetSizeWidth": {
            "type": "integer"
          },
          "MNetSizeLength": {
            "type": "integer"
          },
          "MNetWeight": {
            "type": "integer"
          },
          "MGrossWeight": {
            "type": "integer"
          },
          "MMarginPercent": {
            "type": "integer"
          },
          "MEOL": {
            "type": "boolean"
          },
          "MTag": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "assemblies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      },
      "NewTrainer": {
        "type": "object",
        "properties": {
          "TName": {
            "type": "string"
          },
          "TShortName": {
            "type": "string"
          },
          "TPLEPartNumber": {
            "type": "string"
          },
          "TRevision": {
            "type": "string"
          },
          "TDescription": {
            "type": "string"
          },
          "TNetWeight": {
            "type": "integer"
          },
          "TGrossWeight": {
            "type": "integer"
          },
          "TEOL": {
            "type": "boolean"
          },
          "TTag": {
            "type": "string"
          },
          "modules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      },
      "NewOpportunity": {
        "type": "object",
        "properties": {
          "OName": {
            "type": "string"
          },
          "OShortName": {
            "type": "string"
          },
          "ODescription": {
            "type": "string"
          },
          "OStatus": {
            "type": "string"
          },
          "Customer_ID": {
            "type": "string",
            "format": "uuid"
          },
          "Reseller_ID": {
            "type": "string",
            "format": "uuid"
          },
          "ՕStart": {
            "type": "string",
            "format": "date"
          },
          "OManufacturingStart": {
            "type": "string",
            "format": "date"
          },
          "OManufacturingDeadline": {
            "type": "string",
            "format": "date"
          },
          "ODeliveryDeadline": {
            "type": "string",
            "format": "date"
          },
          "OHandOverDeadline": {
            "type": "string",
            "format": "date"
          },
          "OPaymetTerms": {
            "type": "string"
          },
          "OShippingTerms": {
            "type": "string"
          },
          "OTag": {
            "type": "string"
          },
          "trainers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "services": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      },
      "NewStock": {
        "type": "object",
        "properties": {
          "SLocationRoom": {
            "type": "string"
          },
          "SLocationRow": {
            "type": "string"
          },
          "SLocationColumn": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      },
      "NewTransaction": {
        "type": "object",
        "properties": {
          "TDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "TType": {
            "type": "string"
          },
          "Shop_ID": {
            "type": "string",
            "format": "uuid"
          },
          "Opportunity_ID": {
            "type": "string",
            "format": "uuid"
          },
          "TContactPerson": {
            "type": "string"
          },
          "components": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      },
      "NewVendor": {
        "type": "object",
        "properties": {
          "VRName": {
            "type": "string"
          },
          "VRShortName": {
            "type": "string"
          },
          "VRDescription": {
            "type": "string"
          },
          "VRCountry": {
            "type": "string"
          },
          "VRCity": {
            "type": "string"
          },
          "VRAddress": {
            "type": "string"
          },
          "VRWeb": {
            "type": "string"
          },
          "VRWebStore": {
            "type": "string"
          },
          "VRContact": {
            "type": "string"
          },
          "VRRating": {
            "type": "integer"
          }
        }
      },
      "NewShop": {
        "type": "object",
        "properties": {
          "SPName": {
            "type": "string"
          },
          "SPShortName": {
            "type": "string"
          },
          "SPDescription": {
            "type": "string"
          },
          "SPCountry": {
            "type": "string"
          },
          "SPCity": {
            "type": "string"
          },
          "SPAddress": {
            "type": "string"
          },
          "SPWeb": {
            "type": "string"
          },
          "SPWebStore": {
            "type": "string"
          },
          "SPContact": {
            "type": "string"
          },
          "SPRating": {
            "type": "integer"
          }
        }
      },
      "NewCustomer": {
        "type": "object",
        "properties": {
          "CRName": {
            "type": "string"
          },
          "CRShortName": {
            "type": "string"
          },
          "CRDepartment": {
            "type": "string"
          },
          "CRDescription": {
            "type": "string"
          },
          "CRCountry": {
            "type": "string"
          },
          "CRCity": {
            "type": "string"
          },
          "CRAddress": {
            "type": "string"
          },
          "CRWeb": {
            "type": "string"
          },
          "CRContact": {
            "type": "string"
          },
          "CRRating": {
            "type": "integer"
          }
        }
      },
      "NewReseller": {
        "type": "object",
        "properties": {
          "RRName": {
            "type": "string"
          },
          "RRShortName": {
            "type": "string"
          },
          "RRDescription": {
            "type": "string"
          },
          "RRCountry": {
            "type": "string"
          },
          "RRCity": {
            "type": "string"
          },
          "RRAddress": {
            "type": "string"
          },
          "RRWeb": {
            "type": "string"
          },
          "RRContact": {
            "type": "string"
          },
          "RRRating": {
            "type": "integer"
          }
        }
      },
      "NewTag": {
        "type": "object",
        "properties": {
          "TGName": {
            "type": "string"
          }
        }
      },
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role_id": {
            "type": "string"
          }
        }
      }
    }
  }
}
